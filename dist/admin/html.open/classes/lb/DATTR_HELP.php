<?php

class DATTR_HELP
{
	private $db;

	private function __construct()
	{
		$this->init();
	}

	public static function GetInstance()
	{
        if ( !isset($GLOBALS['_DATTR_HELP_']) )
			$GLOBALS['_DATTR_HELP_'] = new DATTR_HELP();
		return $GLOBALS['_DATTR_HELP_'];
	}
	
	public function GetItem($label)
	{
		if (isset($this->db[$label]))
			return $this->db[$label];
		else
			return NULL;
	}
	
	private function init() {
		$this->db['CACertFile'] = new DATTR_HELP_ITEM('CA Certificate File', ' Specifies the file contains all certificates of Certification Authorities (CAs) for chained certificates.  It is simply the concatenation of PEM-encoded Certificate  files, in order of preference. This can be used alternatively or additionally to CA Certificate Path. Those certificates are for constructing the server certificate chain, which will be sent to browsers in addition to the server certificate. Those certificates will be  used for client certificate authentication as well. ', '', 'File name which can be an absolute path or relative to $SERVER_ROOT.');
		$this->db['CACertPath'] = new DATTR_HELP_ITEM('CA Certificate Path', ' Specifies the directory where the Certificates of Certification Authorities (CAs) are being kept. Those certificates are for constructing the server certificate chain, which will be sent to browsers in addition to the server certificate. Those certificates will be  used for client certificate authentication as well. ', '', 'path');
		$this->db['ClusterErrMsg'] = new DATTR_HELP_ITEM('Custom Error Messages', 'Specify a custom error message in case error occured during  distributing request to backend servers. Custom error messages  configured at virtual host level will override this configuration.', '', '');
		$this->db['GroupDBLocation'] = new DATTR_HELP_ITEM('Group DB Location', ' Specifies the location of the group database.   Group information can be set either in user database or in this standalone group DB. For user authentication, user DB will be checked first, if there also contains group information, then group DB will not be checked.  <br><br>  For DB type of Password File, it is the path to the flat file containing group definitions. You can edit this file through the  WebAdmin by clicking on the file name.  Each line of the group file contains a groupname followed by a colon,  then followed by space delimited group user names. Example:<br><br> testgroup: user1 user2 user3   For DB type of LDAP, it is the LDAP URL to query group  information. For each valid group, one and only one record should be returned in the LDAP search request based on the this URL and group name specified in Required. &quot;$k&quot; must be specified in the filter part of the URL and it will be replaced with the group name. The name of the attribute that  specifies member in this group is specified by Group Member Attribute. <br><br> Example: If objectClass posixGroup is being used to store group information. The following URL could be used: <br><br> <br><br>ldap://localhost/ou=GroupDB,dc=example,dc=com???(&amp;(objectClass=*)(cn=$k)) <br><br>   ', '[Security] It is recommended to store a group file outside the document tree.  If it has to be placed inside document tree, simply name it with a leading &quot;.ht&quot;  like .htgroup to prevent being served as a static file.  LiteSpeed web server  does not serve files prefixed with &quot;.ht&quot;.', 'File name which can be absolute, or relative to $SERVER_ROOT, or relative to $VH_ROOT.');
		$this->db['LDAPBindDN'] = new DATTR_HELP_ITEM('LDAP Bind DN', ' Specifies a DN used to bind to the server. If the LDAP Server  requires authentication, a bind DN and password must be specified. If not specified, anonymous bind will be used.  ', '', 'string');
		$this->db['LDAPBindPasswd'] = new DATTR_HELP_ITEM('LDAP Bind Password', ' Specifies a password used to bind to the server. If the LDAP Server  requires authentication, a bind DN and password must be specified.   ', '', 'string');
		$this->db['SSLCryptoDevice'] = new DATTR_HELP_ITEM('SSL Hardware Accelerator', '  Specifies which SSL hardware acceleration device to use. Only devices supported by OpenSSL can be used. Select OpenSSL internal engine if no device is installed.  ', '', 'Select from drop down list');
		$this->db['TABLEClusterErrMsg'] = new DATTR_HELP_ITEM('Custom Error Messages', 'Specify a custom error message in case error occured during  distributing request to backend servers. Custom error messages  configured at virtual host level will override this configuration.', '', '');
		$this->db['TABLEaccessControl'] = new DATTR_HELP_ITEM('Access Control', 'Specifies what sub network and/or IP address can access the server.   This is a server level setting that affects all virtual hosts. You can also set up   access control unique to each virtual host. Virtual host setting will NOT   override the server setting. <br><br>    Whether to block/allow an IP is determined by the combination of allowed list and denied list.   If you want to block certain IP or sub-network, put * or ALL in   Allowed List and list the blocked IP or sub-network in Denied List.   If you want to only allow certain IP or sub-network, put * or ALL   in Denied List and list the allowed IP or sub-network in Allowed List.   The setting of the smallest scope that fits for an IP will be used to determine whether   to block or allow. <br><br>    Trusted IP or sub-network must be specified in the Allowed List by adding a   trailing &quot;T&quot;. Trusted IP or sub-network is not affected by connection/throttling limits.   Only server level access control can set up trusted IP/sub-network.', '[Security] Use this for general restrictions that apply to all virtual hosts.', '');
		$this->db['TABLEerrPage'] = new DATTR_HELP_ITEM('Customized Error Pages', 'Whenever the server has a problem in processing a request,   the server will return an error code and an html page as the error message   to web client. Error codes are defined in the HTTP protocol (see RFC 2616).   LiteSpeed server has a built-in default error page for each error code.  A customized page can be configured for each error code. In LiteSpeed server,   error pages can be further customized to be unique for each virtual host.', '', '');
		$this->db['TABLEgeolocationDB'] = new DATTR_HELP_ITEM('IP to Geolocation DB', ' Multiple MaxMind geolocation databases can be specified here. MaxMind  has the following type of DB: Country, Region, City, Organization, ISP and  Netspeed.   For database type of Country, Region and City, the later type of DB contains   more information than that of a DB with former type, only one of those type of  DB should be specified, if multiple DBs with those types are configured, the  last one will be effective.', '', '');
		$this->db['TABLEloadBalancerContext'] = new DATTR_HELP_ITEM('Load Balancer Context', 'A Load Balancer Context can be used to forward one URI or a group of URIs to another location.   The destination URI can be either on the same web site or an absolute URI pointing to another web site.', '', '');
		$this->db['TABLEperClientConnLimit'] = new DATTR_HELP_ITEM('Per Client Throttling Control', 'These are connection control setting on a per client/IP basis.   These settings help to mitigate DoS (Denied of Service) and DDoS (Distributed Denied of Service) attacks.', '', '');
		$this->db['TABLErealms'] = new DATTR_HELP_ITEM('Authorization Realms', 'Lists all authorization realms for this virtual host.   Authorization realms is used to block unauthorized users from accessing protected web pages.   A realm is a user directory containing user names and passwords with optional   group classification. Authorization is performed at context level.   Since different contexts can share the same realm(user database), so realms are defined separately.   You can refer to a realm by its name in context configuration.', '', '');
		$this->db['TABLEredirectContext'] = new DATTR_HELP_ITEM('Redirect Context', 'A Redirect Context can be used to forward one URI or a group of URIs to another location.   The destination URI can be either on the same web site (internal  redirect) or an absolute URI pointing to another web site (external redirect).', '', '');
		$this->db['TABLEsslProtocol'] = new DATTR_HELP_ITEM('SSL Protocol', 'Customizes SSL Protocols accepted by the listener.', '', '');
		$this->db['TABLEsslSetting'] = new DATTR_HELP_ITEM('SSL Private Key & Certificate', 'Every SSL listener requires a pair of SSL private key and SSL certificate.   Multiple SSL listeners can share same key and certificate.   SSL private key can be generated by yourself using SSL software  package, such as OpenSSL. SSL certificate can be purchased from an authorized certificate   issuer like VeriSign or Thawte. You can also sign the certificate by yourself,   but that certificate is not trusted and not supposed to be used on public web   sites containing critical data. However, the self signed certificate is good   enough for internal use, for e.g., for encrypting traffic for the  web administration console of LiteSpeed server.', '', '');
		$this->db['TABLEvhAccessControl'] = new DATTR_HELP_ITEM('Access Control', 'Specifies what sub-network and/or IP address can access this virtual host   in addition to server level access control. Virtual host setting does NOT override   the server setting. Whether to block/allow an IP is determined by the combination   of allowed list and denied list. If you want to block certain IP or sub-network,   put * or ALL in the allowed list and list the blocked IP or   sub-network in the denied list. If you want to only allow certain IP or sub-network,   put * or ALL in the denied list and list the allowed IP or   sub-network in the allowed list. The setting of the smallest scope that fits for   an IP will be used to determine whether to block or allow access.', '', '');
		$this->db['TABLEvhHotlink'] = new DATTR_HELP_ITEM('Hotlink Control', 'Hotlinking are requests made from an external website to  files on your own website often referred to as &quot;leeching&quot;. This practice  introduce additional bandwidth usage that you should not be responsible for. <br><br>  LiteSpeed server can prevent others from hotlinking content on  your web site by checking the &quot;Referer&quot; header within a HTTP request. If the &quot;Referer&quot; header does not match your own website,   the request is denied.', '', '');
		$this->db['TABLEvirtualHostMapping'] = new DATTR_HELP_ITEM('Virtual Host Mappings', 'Specifies the relationship between the listener and virtual hosts.   Listener and virtual hosts are associated by domain names.   A HTTP request will be routed to a virtual host with matching domain name.   One listener can map to multiple virtual hosts on different domain names.   One virtual host can also be mapped from different listeners.   One listener can allow one catchall virtual host with domain name &quot;*&quot;.   When there is no explicitly matched domain name, listener will forward   the request to that catchall virtual host.', '[Performance] Only add necessary mappings. If the listener is dedicated   to only one virtual host, then only set the catchall mapping with &quot;*&quot;.', '');
		$this->db['accessAllowed'] = new DATTR_HELP_ITEM('Access Allowed', ' Specifies which IP or sub-network is allowed to access resource under this context. Together with  Access Denied and server/vhost level access control, the accessibility is determined by  the smallest scope that client&#039;s IP address falls into.  ', '', 'comma-delimited list of IP/sub-network.  sub-network can be like 192.168.1.0/255.255.255.0, 192.168.1 or 192.168.1.*.');
		$this->db['accessControl'] = new DATTR_HELP_ITEM('Access Control', 'Specifies what sub network and/or IP address can access the server.   This is a server level setting that affects all virtual hosts. You can also set up   access control unique to each virtual host. Virtual host setting will NOT   override the server setting. <br><br>    Whether to block/allow an IP is determined by the combination of allowed list and denied list.   If you want to block certain IP or sub-network, put * or ALL in   Allowed List and list the blocked IP or sub-network in Denied List.   If you want to only allow certain IP or sub-network, put * or ALL   in Denied List and list the allowed IP or sub-network in Allowed List.   The setting of the smallest scope that fits for an IP will be used to determine whether   to block or allow. <br><br>    Trusted IP or sub-network must be specified in the Allowed List by adding a   trailing &quot;T&quot;. Trusted IP or sub-network is not affected by connection/throttling limits.   Only server level access control can set up trusted IP/sub-network.', '[Security] Use this for general restrictions that apply to all virtual hosts.', '');
		$this->db['accessControl_allow'] = new DATTR_HELP_ITEM('Allowed List', ' Specifies the list of IPs or sub-networks allowed. ', '[Security] Trusted IPs or sub-networks set at server level access  control will be excluded from connection/throttling limits.', 'Comma delimited list of IP addresses or sub-networks.  * or ALL, sub-network can be like  192.168.1.0/255.255.255.0, 192.168.1.0/24, 192.168.1 or 192.168.1.*. <br><br> IPv6 address should be like ::1 or [::1], IPv6 subnet should be like 3ffe:302:11:2:20f:1fff:fe29:717c/64 or  [3ffe:302:11:2:20f:1fff:fe29:717c]/64. A trailing &quot;T&quot; can be used to indicate a trusted IP or sub-network, like 192.168.1.*T.');
		$this->db['accessControl_deny'] = new DATTR_HELP_ITEM('Denied List', ' Specifies the list of IPs or sub-networks disallowed. ', '', 'Comma delimited list of IP address or sub-network, * or ALL,  sub-network can be like  192.168.1.0/255.255.255.0, 192.168.1.0/24, 192.168.1 or 192.168.1.*. <br><br> IPv6 address should be like ::1 or [::1], IPv6 subnet should be like 3ffe:302:11:2:20f:1fff:fe29:717c/64 or  [3ffe:302:11:2:20f:1fff:fe29:717c]/64.');
		$this->db['accessDenied'] = new DATTR_HELP_ITEM('Access Denied', ' Specifies which IP or sub-network is NOT allowed to access resource under this context.  Together with Access Allowed and server/vhost level access control, the accessibility is  determined by the smallest scope that client&#039;s IP address falls into.  ', '', 'comma-delimited list of IP/sub-network. sub-network can be like  192.168.1.0/255.255.255.0, 192.168.1 or 192.168.1.*.');
		$this->db['accessLog_bytesLog'] = new DATTR_HELP_ITEM('Bytes Log', ' Specifies the path to the bandwidth bytes log file. When specified, a CPanel compatible bandwidth log will be created. Will log  the total bytes transfered for a request including both request and reply body. ', '[Performance] Put the log file on a separate disk.', 'File name which can be an absolute path or relative to $SERVER_ROOT.');
		$this->db['accessLog_compressArchive'] = new DATTR_HELP_ITEM('Compress Archive', ' Specifies whether to compress rotated log files in order to save disk space. ', 'Log files are highly compressible and this is recommended to reduce disk usage for old logs.', 'Select from radio box');
		$this->db['accessLog_fileName'] = new DATTR_HELP_ITEM('File Name', ' Specifies the file name of the access log file.  ', '[Performance] Put access log file on a separate disk.', 'File name which can be an absolute path or relative to $SERVER_ROOT.');
		$this->db['accessLog_keepDays'] = new DATTR_HELP_ITEM('Keep Days', ' Specifies how many days the access log file will be kept on disk.  Only rotated log file older than specified days will be deleted and the active current  log file will not be touched regardless how many days&#039; data it contains.  If you do not want to auto-delete stale and very old log files, set this value to 0. ', '', 'Integer number');
		$this->db['accessLog_logFormat'] = new DATTR_HELP_ITEM('Log Format', '  Specifies the log format for access log. When log format is set, it will override Log Level setting. The syntax of log format is compatible with  Apache 2.0&#039;s custom log format.  ', '', 'string');
		$this->db['accessLog_logHeader'] = new DATTR_HELP_ITEM('Log Headers', ' Specifies whether to log HTTP request headers: Referer, UserAgent, and Host. ', '[Performance] Turn it off if you do not need these headers in the access log.', 'Select from checkbox');
		$this->db['accessLog_pipedLogger'] = new DATTR_HELP_ITEM('Piped Logger', ' Specifies an external application that will receive the access log data sent by LiteSpeed through a pipe on its STDIN stream (file handle 0). When specified, access log will be sent only to the logger application but not the access log file specified in previous entry. <br><br> The LiteSpeed load balancer  performs simple load balancing among multiple logger applications if more than one instance of logger application is configured.  LiteSpeed server always attempts to keep the number of logger processes as low as possible. Only when  one logger application failed to process access log entries in time  will the server attempt to spawn another instance of logger application. <br><br> If a logger process crashes, the server will start another instance but the log data in the stream buffer will be lost. It is possible to lose log data if external loggers cannot keep up   with the speed and volume of the log stream. <br><br> File path to the logger application should be given here, and optionally, number of application instaces can be set before the file path, followed by &#039;|&#039;. Example, &quot;4|/path/to/logger/app&quot; tell server to start up to 4 logger processes, while, only one logger process will be started if &quot;/path/to/logger/app&quot; is used. <br><br>   ', '', '[&lt;intances&gt;|]&lt;path_to_logger_app&gt;');
		$this->db['aclogUseServer'] = new DATTR_HELP_ITEM('Log Control', ' Specifies where to write access log. There are three options:  1. write to server&#039;s access log; 2. create its own access log; 3. disable access logging. ', '', 'Select from drop down list');
		$this->db['addDefaultCharset'] = new DATTR_HELP_ITEM('Add Default Charset', ' Specifies whether to add a character set tag to the 	   &quot;Content-Type&quot; response header, when content type is either 	   &quot;text/html&quot; or &quot;text/plain&quot; without any parameter. 	   When set to Off,  this function is disabled. When set to 	   On, either character set specified by 	   Customized Default Charset or the default &quot;iso-8859-1&quot; will be added. ', '', 'Select from radio box');
		$this->db['adminEmails'] = new DATTR_HELP_ITEM('Administrator Email', ' Specifies the server administrator&#039;s email address(es). It is a comma delimited list.  If specified, administrators will be notified by email of important events: i.e.   when the LiteSpeed service is restarted automatically due to crash detection. ', 'Email alert feature will only work if the server has an active MX server such as postfix, exim, or sendmail.', 'comma delimited list of email address.');
		$this->db['adminUser'] = new DATTR_HELP_ITEM('Admin User', ' Change user name and password for WebAdmin Console. Click Edit to change user name or password. Old password has to be entered and verified in order to save the changes.   ', 'If you forget the admin password, you cannot change it from the Web Administration Console. Please use the following command from shell: [your install dir]/admin/misc/admpass.sh', '');
		$this->db['allowDirectAccess'] = new DATTR_HELP_ITEM('Allow Direct Access', ' Specifies whether to allow direct access without a referrer. There is no &quot;Referer&quot; header in HTTP request when a user types in an address directly in the address box, or uses a feature like &quot;Save Target Link As&quot;.  ', '', 'Select from radio box');
		$this->db['allowedHosts'] = new DATTR_HELP_ITEM('Allowed Domains', ' Specifies which web site can link to protected content. ', '', 'comma delimited list of domain name');
		$this->db['authName'] = new DATTR_HELP_ITEM('Authentication Name', ' Specifies an alternative name of the authorization realm for current context.  If it is not specified, the original realm name will be used. Authentication name is  displayed on the browser&#039;s login pop-up. ', '', '');
		$this->db['autoRestart'] = new DATTR_HELP_ITEM('Auto Restart', ' Enables service auto-recovery: automatically recreating a new server process when current server exits abnormally.<br><br>  When this option is enabled, there are two instances of server process &quot;lshttpd&quot;. The parent process  monitors the child process and will create a new child process if the current one exits abnormally.  However, if current child process exits normally, the parent process will exit as well. You can use  the shell command  lswsctrl stop or directly kill the child process; the parent process will  exit assuming that you do want to shut down the server. If the server is started by a super user,  the child process will change its ownership based on Running As configuration, and the parent  process will not change its user/group. ', '[Security] Parent process&#039;s only job is to monitor the child, does not interact with the outside world, and therefore safe to execute as a super user.<br><br> &amp;nbsp;&amp;nbsp;[Reliability] This feature should always be enabled for an extra layer protection against service down time.', 'Select from radio box');
		$this->db['autoUpdateDownloadPkg'] = new DATTR_HELP_ITEM('Download Updates', ' Specifies whether to auto-download the new product release package file when available. If a new package has been successfully downloaded, an online one-click upgrade can be performed via the web administration console under &quot;Service Manager&quot;-&gt;Version Management.  ', '', 'Select from drop down list');
		$this->db['autoUpdateInterval'] = new DATTR_HELP_ITEM('Check For Update', ' Specifies how often the update agent will check for new product release. Options are &quot;Daily&quot;, &quot;Weekly&quot;, or &quot;Monthly&quot;. ', '', 'Select from drop down list');
		$this->db['banPeriod'] = new DATTR_HELP_ITEM('Banned Period (sec)', ' Specifies for how long new connections will be rejected from an IP at the end of  Grace Period (sec) if the number of connections is still more than .  If the IP continues to go over limit after a grace period, you should configured it that the IP be banned a even longer time value. ', '', 'Integer number');
		$this->db['censorLogLevel'] = new DATTR_HELP_ITEM('Log Level', ' Specifies the log level of the censoring engine debug output. Value ranges from 0 - 9, 0 will disable logging and 9 will produce the most detailed log. The log level of the server error log must be set to at least INFO for this option to take effect. This is useful when testing your censoring rules.  ', '', 'Integer number');
		$this->db['censorRuleSet'] = new DATTR_HELP_ITEM('Rules Definition', ' Specifies a list of censorship rules. Syntax of censoring rule follow Apache&#039;s mod_security directives. &quot;SecFilter&quot; or &quot;SecFilterSelective&quot; can be  used here.  You can copy and paste Security Rules in Apache configuration  file. For more details about rule syntax, please refer to Mod Security document.   ', '', 'string');
		$this->db['censorRuleSetEnabled'] = new DATTR_HELP_ITEM('Enabled', ' Specifies whether to enable this rule set. With this option, a rule set can be quickly turned on and off without adding or removing the rule set. Default is yes.  ', '', 'Select from radio box');
		$this->db['censorRuleSetName'] = new DATTR_HELP_ITEM('Name', ' Give a group of censorship rules a name, for display only.  ', '', 'string');
		$this->db['certChain'] = new DATTR_HELP_ITEM('Chained Certificate', ' Specifies whether the certificate is a chained certificate or not. The file that stores a certificate chain must be in PEM format, and the certificates must be in the chained order, from the lowest level (the actual client or server certificate), to the highest level (root) CA. ', '', 'Select from radio box');
		$this->db['certFile'] = new DATTR_HELP_ITEM('Certificate File', ' Specifies the file name of the SSL certificate file. ', '[Security] The certificate file should be placed in a secured directory,  which allows only readable access by the user that the server running as.', 'File name which can be an absolute path or relative to $SERVER_ROOT.');
		$this->db['clientVerify'] = new DATTR_HELP_ITEM('Client Verification', ' Specifies the type of client certifcate authentication. Available types are   none: no client certificate is required optional: client certificate is optional require: the client must has valid certificate optional_no_ca: same as optional   In practise, you should really use &quot;none&quot; or &quot;require&quot;. Default is none.  ', '', 'Select from drop down list');
		$this->db['compressibleTypes'] = new DATTR_HELP_ITEM('Compressible Types', ' Specifies what MIME types are allowed to be compressed. For example,  if you want to compress text/* but not text/css, you can have a rule like  text/*, !text/css. &quot;!&quot; will exclude that mime type. ', '[Performance] Only allow types that will benefit from GZIP compression. Binary  files such as gif/png/jpeg images and flash files do not benefit from compression.', 'MIME type list separated by commas. Wild card &quot;*&quot; and  negate sign &quot;!&quot; are allowed, i.e. text/*, !text/js.');
		$this->db['configFile'] = new DATTR_HELP_ITEM('Config File', ' Specifies the configuration file name for this virtual host.  If the configuration file is placed under the virtual host root,  $VH_ROOT/conf/vhconf.xml is recommended; if it is placed under the server root,  $SERVER_ROOT/conf/{VirtualHostName}.xml is recommended. ', '', 'File name which can be absolute, or relative to $SERVER_ROOT, or relative to $VH_ROOT.');
		$this->db['connTimeout'] = new DATTR_HELP_ITEM('Connection Timeout', ' Specifies the maximum allowed connection idle time during processing one request.  The connection will be closed whenever it is idle, no i/o activity, for this period  of time.  ', '[Security] Set it to as low as you can to help recover dead  connections during potential DoS attack.', 'Integer number');
		$this->db['consoleSessionTimeout'] = new DATTR_HELP_ITEM('Session Timeout (secs)', ' Customize the session timeout of WebAdmin Console. Default is 60 secs if no value is set. ', '[Security] Set a proper value for production use, usually should be less than 300 seconds.', 'Integer number');
		$this->db['cookieName'] = new DATTR_HELP_ITEM('Tracking Cookie Name', ' Specify the tracking cookie name. ', '', 'string');
		$this->db['crlFile'] = new DATTR_HELP_ITEM('Client Revocation File', ' Specifies the file contains PEM-encoded CA CRLs for revoked  client certificates. This can be used alternatively and/or additionally to  Client Revocation Path. ', '', 'File name which can be an absolute path or relative to $SERVER_ROOT.');
		$this->db['crlPath'] = new DATTR_HELP_ITEM('Client Revocation Path', ' Specifies the directory containing PEM-encoded CA CRLs files for revoked  client certificates. The files in this directory have to be PEM-encoded and are accessed through hash filenames, hash-value.rN. Please refer to openSSL or Apache mod_ssl documentation regarding creating the hash filename.  ', '', 'path');
		$this->db['defaultAction'] = new DATTR_HELP_ITEM('Default Action', ' Specifies the default actions should be taken when a censoring rule was matched. The action string is compatible with the syntax of Apache mod_security, please refer to mod_security manual for more detail. Default value is &quot;deny,log,satatus:403&quot;, which means to deny access with status code 403 and log the incident in the error log.  ', '', 'string');
		$this->db['defaultCharsetCustomized'] = new DATTR_HELP_ITEM('Customized Default Charset', ' Specifies a character set to be used when Add Default Charset 	   is On. This is optional. Default value is iso-8859-1. 	   This entry has no effect when Add Default Charset is 	   Off. ', '', 'name of a character set, like utf-8');
		$this->db['defaultCluster'] = new DATTR_HELP_ITEM('Default Cluster', ' Specifies the cluster that handle requests to this vhost.  ', '', 'Select from drop down list');
		$this->db['defaultTargetPort'] = new DATTR_HELP_ITEM('Default Target Port', ' Specifies a default target port for connecting to the backend worker. It can be overriden in worker configuration. ', '', 'Integer number');
		$this->db['destinationuri'] = new DATTR_HELP_ITEM('Destination URI', ' Specifies the target location of the redirection.  If this redirected URI maps to a URI in another redirect context, it will be redirected again.  This URI can either be a relative URI on the same web site starting with &quot;/&quot;,  or an absolute URI pointing to different web site starting with &quot;http(s)://&quot;.   If the URI contains regular expression, the destination can reference  the matched variables such as $1, $2. ', '', '');
		$this->db['disableInitLogRotation'] = new DATTR_HELP_ITEM('Disable Initial Log Rotation', ' Specifies whether to disabled rotatation of server error log file at startup. Default is not to disable it.  ', '', 'Select from radio box');
		$this->db['disableSecHtaccess'] = new DATTR_HELP_ITEM('Disable .htaccess Override', ' Specifies whether to disable .htaccess override. This is a global setting, only available at server level.  Default is No.  ', '', 'Select from radio box');
		$this->db['domainName'] = new DATTR_HELP_ITEM('Domains', ' Specifies the mapping domain names. Domain name is case insensitive and  the leading &quot;www.&quot; will be removed. The wildcard characters &quot;*&quot; and &quot;?&quot; are allowed, &quot;?&quot; only matches one character, &quot;*&quot; matches any numbers of characters. For example, &quot;*.mydomain.com&quot; will match all subdomains of mydomain.com. Duplicated domain names are not allowed.  * is a catchall domain name, which will match any unmatched domain name.  ', '[Performance] If a listener is dedicated to one virtual host,  always use * for domain name to avoid unnecessary checking. Domain names with wildcard characters should be avoided whenever possible.', 'comma-separated list.');
		$this->db['dynReqPerSec'] = new DATTR_HELP_ITEM('Requests/Second', ' Specifies the maximum number of requests to dynamically generated content  coming from a single IP address can be processed in each second regardless of number of connections established.  When the limit is reached, all future requests to dynamic content  are tar-pitted until next second.  Per client request limit can be set at server or virtual host level where virtual host level setting overrides server level setting. ', '[Security] Trusted IP or sub-network is not effected', 'Integer number');
		$this->db['enableCensorship'] = new DATTR_HELP_ITEM('Enable Request Filtering', ' Specifies whether to enable request content deep inspection. This feature is equvialent to Apache&#039;s mod_security, which can be used to detect and block requests with ill intention by matching known signatures.  ', '', 'Select from radio box');
		$this->db['enableCoreDump'] = new DATTR_HELP_ITEM('Enable Core Dump', ' Specifies whether to enable core dump when server is started by &quot;root&quot; user.  For most modern Unix systems, processes that changes user id or group id is not allowed to  dump a core file for security reasons. However, it is much easier to identify root  cause of a problem with a core dump. This option only works on Linux with kernel &gt;2.4.  Solaris users should use coreadm command to control this feature. ', '[Security] Only enable it when you see no core file is created in  server log file and disable it immediately after producing the core file.  Please submit a bug report when core dump is created.', 'Select from radio box');
		$this->db['enableGzip'] = new DATTR_HELP_ITEM('Enable GZIP', ' Specifies whether to enable GZIP compression for this virtual host.  This setting is effective only when server level GZIP compression is enabled, i.e.  virtual host can only turn off compression enabled at server level.  Compression settings are configured at server level (Tuning-GZIP). ', '', 'Select from radio box');
		$this->db['enableGzipCompress'] = new DATTR_HELP_ITEM('Enable Compression', ' Controls GZIP compression for both static and dynamic HTTP responses.  ', '[Performance] Enable it to save network bandwidth. Text based responses such as  html, css, and javascript files benefit the most and on average can be compressed to 1/2 of original size.', 'Select from radio box');
		$this->db['enableHotlinkCtrl'] = new DATTR_HELP_ITEM('Enable Hotlink Protection', ' Specifies whether to activate hotlink protection. ', '', 'Select from radio box');
		$this->db['enableIpGeo'] = new DATTR_HELP_ITEM('Enable IP Geolocation', '  Specifies whether to enable IP to Geolocation lookup. It can be set at server, virtual host or context level.  ', '', 'Select from radio box');
		$this->db['enableRewrite'] = new DATTR_HELP_ITEM('Enable Rewrite', ' Specifies whether to enable LiteSpeed URL rewrite engine. This option can be customized at virtual host and context level, and is inherited along the directory tree until it is explicitly overridden.   ', '', 'Select from radio box');
		$this->db['env'] = new DATTR_HELP_ITEM('Environment', ' Specifies some extra environment variables for the external application. ', '', 'key=value multiple variables can be separated by &quot;ENTER&quot;');
		$this->db['errCode'] = new DATTR_HELP_ITEM('Error Code', ' Specifies the HTTP status code for the error page.  Only selected HTTP status code can have customized error page.  ', '', 'Select from drop down list');
		$this->db['errMessage'] = new DATTR_HELP_ITEM('Custom Error Message', ' Specify a custom error message. ', '', '');
		$this->db['errPage'] = new DATTR_HELP_ITEM('Customized Error Pages', 'Whenever the server has a problem in processing a request,   the server will return an error code and an html page as the error message   to web client. Error codes are defined in the HTTP protocol (see RFC 2616).   LiteSpeed server has a built-in default error page for each error code.  A customized page can be configured for each error code. In LiteSpeed server,   error pages can be further customized to be unique for each virtual host.', '', '');
		$this->db['errPageAction'] = new DATTR_HELP_ITEM('Action', ' To change the error page setting click &quot;Edit&quot;.  To remove this customized error page, click &quot;Delete&quot;. ', '', '');
		$this->db['eventDispatcher'] = new DATTR_HELP_ITEM('I/O Event Dispatcher', ' Specifies which I/O event dispatcher to use. Different operating systems support different types of event dispatcher:    Linux kernel 2.4.x supports:      poll      Linux kernel 2.6.x supports:      pollepoll      FreeBSD supports:      pollkqueue      Solaris supports:      polldevpoll      Mac OS X 10.3 and above supports:      pollkqueue       poll is supported by all platforms, and is the default selection.    For high traffic web sites, altenative event dispatcher can be used to improve the    scalability of the load balancer.  ', '', 'Select from drop down list');
		$this->db['expuri'] = new DATTR_HELP_ITEM('URI', ' Specifies the URI for this context. URI can be a plain URI (starting with &quot;/&quot;) or  a Perl compatible regular expression URI (starting with &quot;exp:&quot;).  If a plain URI ends  with a &quot;/&quot;, then this context will include all sub-URIs under this URI. If the context maps to a directory on the file system, a trailing &quot;/&quot; must be added. For examples, a plain URI like /examples/ with Root  set to /home/john/web_examples will map the request &quot;/examples/foo/bar.html&quot;  to file &quot;/home/john/web_examples/foo/bar.html&quot;. To simulate Apache&#039;s mod_userdir,  set URI to exp: ^/~([A-Za-z0-9]+)(.*),  set Root to /home/$1/public_html$2, a request URI /~john/foo/bar.html will  map to file /home/john/public_html/foo/bar.html. ', '', 'URI');
		$this->db['extCluster'] = new DATTR_HELP_ITEM('Cluster', ' Specifies the cluster that handle requests to this context.  ', '', 'Select from drop down list');
		$this->db['externalredirect'] = new DATTR_HELP_ITEM('External Redirect', ' Specifies whether this redirect is external.  For external redirection, Status Code may be specified and  Destination URI can start either with &quot;/&quot; or &quot;http(s)://&quot;.  For internal redirection, Destination URI must start with &quot;/&quot;. ', '', '');
		$this->db['geoipDBCache'] = new DATTR_HELP_ITEM('DB Cache Type', '  Specifies what kind of cache mode should be used. Cache modes are: Standard, MemoryCache, CheckCache and IndexCache. MemoryCache is recommended and it is the default.   ', '', 'Select from drop down list');
		$this->db['geoipDBFile'] = new DATTR_HELP_ITEM('DB File Path', '  Specifies the path to MaxMind GeoIP database. ', '', 'file path');
		$this->db['geolocationDB'] = new DATTR_HELP_ITEM('IP to Geolocation DB', ' Multiple MaxMind geolocation databases can be specified here. MaxMind  has the following type of DB: Country, Region, City, Organization, ISP and  Netspeed.   For database type of Country, Region and City, the later type of DB contains   more information than that of a DB with former type, only one of those type of  DB should be specified, if multiple DBs with those types are configured, the  last one will be effective.', '', '');
		$this->db['gracePeriod'] = new DATTR_HELP_ITEM('Grace Period (sec)', ' Specifies for how long new connections can be accepted after number of connections  established from one IP is over . Within this period, new connections  will be accepted if the total connections still below Connection Hard Limit. After this  period, if the number of connections still higher than , then that  IP will be blocked for Banned Period (sec).  ', '[Performance &amp; Security] Set to a proper number big enough for downloading  a complete page but low enough to prevent deliberate attacks.', 'Integer number');
		$this->db['groupDBCacheTimeout'] = new DATTR_HELP_ITEM('Group DB Cache Timeout', ' Specifies how often the backend group database will be checked for changes.  For more detail please refer to User DB Cache Timeout. ', '', 'Integer number');
		$this->db['groupDBMaxCacheSize'] = new DATTR_HELP_ITEM('Group DB Max Cache Size', ' Specifies the maximum cache size of the group database. For more detail please refer to  User DB Max Cache Size. ', '', 'Integer number');
		$this->db['groupDB_attrGroupMember'] = new DATTR_HELP_ITEM('Group Member Attribute', ' Specifies the name of the Member attribute for a group record stored in LDAP server. Default value is memberUid.  ', '', 'string');
		$this->db['gzipCompressLevel'] = new DATTR_HELP_ITEM('Compression Level (Dynamic Content)', ' Specifies the level of compression for dynamic contents, ranges  from 1 (lowest) to 9 (highest), default is 2. ', '[Performance] Higher compression level will use more memory and CPU cycles.  You can set it to a higher level if your machine has additional power. There is not much difference between 6 and 9 except 9 uses much more CPU cycles.', 'Number between 1 and 9.');
		$this->db['hardLimit'] = new DATTR_HELP_ITEM('Connection Hard Limit', ' Specifies the maximum allowed concurrent connections from a single IP address.  This limit is always enforced and a client will never be able to exceed this limit.   HTTP/1.0 clients usually try to setup as many connections as it needs to download embedded  content at the same time. This limit should be set higher enough for HTTP/1.0 client and  use Connection Soft Limit to set the desired connection limit.  <br><br> The recommended limit is between 20 and 50 depending on the content of your web page and traffic load.  ', '[Security] A lower number will enable serving more distinct clients. <br><br> &amp;nbsp;&amp;nbsp;[Security] Trusted IP or sub-network is not effected. <br><br> &amp;nbsp;&amp;nbsp;[Performance] Set to a high value when you are performing benchmark tests with large number of concurrent client machines.', 'Integer number');
		$this->db['inBandwidth'] = new DATTR_HELP_ITEM('Inbound Bandwidth', ' Specifies the maximum allowed incoming throughput from a single IP address regardless of number of connections established. The real bandwidth could be slightly higher than this setting for efficiency.  Bandwidth is allocated in 1KB units. Set to 0 to disable throttling. Per client bandwidth limit (bytes/sec) can be set at server or virtual host level where virtual host level setting overrides server level setting. ', '[Security] Trusted IP or sub-network is not effected.', 'Integer number');
		$this->db['inMemBufSize'] = new DATTR_HELP_ITEM('Max I/O Buffer Size', ' Specifies the maximum buffer size that is used to store request body and dynamically generated response. When this limit is reached, server will start to create temporary swapping files under Swapping Directory. ', '[Performance] Set it large enough to accommodate all concurrent requests/replies to avoid memory to disk swapping. If there are frequent i/o activity to  the swap directoy, default to /tmp/lshttpd/swap/, this value is too low and LiteSpeed is swapping to disk.', 'Integer number');
		$this->db['initTimeout'] = new DATTR_HELP_ITEM('Initial Request Timeout', ' Specifies the maximum time the load balancer waits for the external  application to respond to the first request over a new established connection.  If the load balancer does not receive any data from the external application within this timeout limit, it will mark this connection as bad. This helps to identify communication problem with external application as quickly as possible. If some requests take longer time to  process, increase this limit to avoid &quot;503&quot; error messages. ', '', 'Integer number');
		$this->db['insertCookie'] = new DATTR_HELP_ITEM('Insert Tracking Cookie', ' Specify whether to insert a tracking cookie. The tracking cookie can be used to reconstruct session cache in case load balancer lost it. ', '', 'Select from radio box');
		$this->db['keepAliveTimeout'] = new DATTR_HELP_ITEM('Keep-Alive Timeout', ' Specifies the maximum idle time between requests from a Keep-Alive connection.  If no new request is received during this period of time, the connection will be closed. ', '[Security &amp; Performance] We recommend you to set the value just long enough to handle  all requests for a single page view. It is unnecessary to keep connection alive for an extended period of time. A smaller value can reduce idle connections, increase capacity to service more users and guard against DoS attacks. 2-5 seconds is a  reasonable range for most applications. LiteSpeed is highly efficient in a non-keep-alive environment.', 'Integer number');
		$this->db['keyFile'] = new DATTR_HELP_ITEM('Private Key File', ' Specifies the file name of the SSL private key file. The key file should not be encrypted. ', '[Security] The private key file should be placed in a secured directory that  allows only readable access by whom the server running as.', 'File name which can be an absolute path or relative to $SERVER_ROOT.');
		$this->db['lb_mode'] = new DATTR_HELP_ITEM('Mode', ' Specifies which mode the load balancer operates in, &quot;Stateless&quot; or &quot;Stateful&quot;.  &quot;Stateful&quot; mode track sessions associated with each back-end server. It also called &quot;Session Affinity&quot;. &quot;Stateless&quot; mode does not care about sessions.    ', '', 'Select from drop down list');
		$this->db['lb_name'] = new DATTR_HELP_ITEM('Name', ' A unique name for a cluster. ', '', '');
		$this->db['lb_type'] = new DATTR_HELP_ITEM('Type', ' Specifies the type of cluster. &quot;Layer-7&quot; HTTP load balancing is supported in 1.0 release, &quot;Layer-4&quot; load balancing is execpted in 2.0 release. <br><br>  &quot;Layer-7&quot; HTTP load balancing is also known as application-level load balancing, is to parse HTTP requests and distribute requests to servers based on different types of request contents. <br><br> &quot;Layer-4&quot; load balancing is transport layer load balancing, such as TCP and UDP transport protocol. It does not look at the content when select a backend server. In theory, it support all kinds of applications.  ', '', 'Select from drop down list');
		$this->db['listenerBinding'] = new DATTR_HELP_ITEM('Binding', '  Specifies which lshttpd child process the listener is assigned to. Enterprise Edition spawns multiple children processes to take advantage of multiple CPUs in a SMP system, different child process can be used to handle requests to different listener by manually associating a listener with a process. By default, a listener is assigned to all children processes. ', '', 'Select from checkbox');
		$this->db['listenerIP'] = new DATTR_HELP_ITEM('IP Address', ' Specifies the IP of the listener. All available IP address is listed,  IPv6 address is enclosed in &quot;[]&quot;. To listen on all IPv4 IP address, ANY should be selected; to listen on all IPv4 and IPv6 IP address, [ANY] should be selected. In order to serve both IPv4 and IPv6 clients, an IPv4-mapped IPv6 address should be used instead of a plain IPv4 address, which looks like [::FFFF:x.x.x.x]. ', '[Security] If your machine has multiple IPs which are on different sub networks,  you can select a specific IP to only allow traffic from corresponding sub network.', 'Select from drop down list');
		$this->db['listenerName'] = new DATTR_HELP_ITEM('Listener Name', ' A unique name for this listener. ', '', '');
		$this->db['listenerPort'] = new DATTR_HELP_ITEM('Port', ' Specifies the TCP port of the listener. Only super user (root) can use port  lower than 1024. Port 80 is the default HTTP port; port 443 is the default HTTPS port.  ', '', 'Integer number');
		$this->db['listenerSecure'] = new DATTR_HELP_ITEM('Secure', ' Specifies whether this is a secure (SSL) listener.  For secure listeners, additional SSL settings need to be set properly. ', '', 'Select from radio box');
		$this->db['loadBalancerContext'] = new DATTR_HELP_ITEM('Load Balancer Context', 'A Load Balancer Context can be used to forward one URI or a group of URIs to another location.   The destination URI can be either on the same web site or an absolute URI pointing to another web site.', '', '');
		$this->db['logUseServer'] = new DATTR_HELP_ITEM('Use Server Log', ' Specifies whether to put log messages from this virtual host into server  log file instead of creating its own log file. ', '', 'Select from radio box');
		$this->db['log_debugLevel'] = new DATTR_HELP_ITEM('Debug Level', ' Specifies the level of debugging log.  If the log level is DEBUG, server will use this to control debugging level. Debug logging is disabled when &#039;Debug Level&#039; is set to NONE even if Log Level is set to DEBUG.  Toggle Debug Logging can be used to control debug level on a live server without restarting.  ', '[Performance] Important! Always set it to NONE if you do not need detailed debug logging. Active debug logging will severely degrade service performance and potentially saturate disk space in a very short timeframe. Debug logging includes detailed information for each request and response.', 'Select from drop down list');
		$this->db['log_enableStderrLog'] = new DATTR_HELP_ITEM('Enable stderr Log', ' Specifies whether to write to log when receiving stderr output from any process started by the server.  If enabled, stderr messages will be logged in the same directory as the server log with  the fixed name &quot;stderr.log&quot;. If disabled, all stderr output will be discarded. ', 'Turn it on if you need to debug configured external applications: i.e. php, ruby, java, python, perl.', 'Select from radio box');
		$this->db['log_fileName'] = new DATTR_HELP_ITEM('File Name', ' Specifies the path of log file.  ', '[Performance] Place log file on a separate disk.', 'File name which can be an absolute path or relative to $SERVER_ROOT.');
		$this->db['log_logLevel'] = new DATTR_HELP_ITEM('Log Level', ' Specifies the level of logging. Available levels are ERROR,  WARNING, NOTICE, INFO and DEBUG from high to low. Only messages with higher level than current setting will be logged.   ', '[Performance] Unless Debug Level is set to a level other than NONE, using DEBUG log level does not have any performance impact. DEBUG log level is recommended.', 'Select from drop down list');
		$this->db['log_rollingSize'] = new DATTR_HELP_ITEM('Rolling Size', ' Specifies when the current log file needs to be rolled over, also known as log rotation.  When the file size is over the rollover limit, the active log file will be renamed  to log_name.mm_dd_yyyy(.sequence) in the same directory and a new active log file will be created.  The actual size of the rotated log file could be a little bigger. Set to 0 to disable log rotation. ', 'Append &quot;K&quot;, &quot;M&quot;, &quot;G&quot; to the number for kilo-, mega- and giga- bytes', 'Integer number');
		$this->db['mappedListeners'] = new DATTR_HELP_ITEM('Mapped Listeners', ' Specifies the names of all listeners that this template maps to. An implicit listener-to-virtual host mapping will be added for all member virtual hosts based on their domain name and aliases.  ', '', 'comma-separated list');
		$this->db['matchedHosts'] = new DATTR_HELP_ITEM('REGEX Matched Domains', ' Specifies web sites that can link to protected content in regular expression. The regular expression will match the domain name only and not the full URL.  ', '', 'Regular expression');
		$this->db['maxConnections'] = new DATTR_HELP_ITEM('Max Connections', ' Specifies the maximum concurrent connections that the server can accept.  It includes both plain TCP connections and SSL connections. It should not exceed  the hard limit set by the server: 150 for Standard Edition, 500  for VPS license. Once this limit is reached, the server will close  Keep-Alive connections when they complete active requests. ', 'When server is started by root user, the server will try to adjust the per process file descriptor limits automatically, however, if it failed, you may need to increase it manually.', 'Integer number');
		$this->db['maxConns'] = new DATTR_HELP_ITEM('Max Connections', ' Specifies the maximum concurrent connections that can be established  between the load balancer and an external application. This setting controls how  many requests can be processed concurrently by an external application.  However, the real limit also depends on the external application itself.  Set this value higher will not help if the external application is not fast enough or cannot scale to large number of concurrent requests. ', '[Performance] Setting a high value does not directly translate to higher performance.  Set the limit to a value that will not overload the the external  application will provide the best performance/throughput.', 'Integer number');
		$this->db['maxDynRespHeaderSize'] = new DATTR_HELP_ITEM('Max Dynamic Response Header Size', ' Specifies the maximum header size of a dynamically generated response. Hard limit is 8KB ', '[Reliability &amp; Performance] Set it low and reasonable to help recognize bad  responses that are dynamically generated by external applications.', 'Integer number');
		$this->db['maxDynRespSize'] = new DATTR_HELP_ITEM('Max Dynamic Response Body Size', ' Specifies the maximum body size of a dynamically generated response. Hard limit is 2047MB. ', '[Reliability &amp; Performance] set the limit low and reasonable to help  identify bad responses. For example, it is not uncommon to malformed scripts continaing infinite loop which leads to infinite sized responses.', 'Integer number');
		$this->db['maxKeepAliveReq'] = new DATTR_HELP_ITEM('Max Keep-Alive Requests', ' Specifies the maximum number of requests that can be served through a Keep-Alive (Persistent)  session. Connection will be closed once this limit is reached. You can set this limit for each virtual host as well.  ', '[Performance] Set it to a resonable high value. Value of 1 or 0 will disable Keep-Alive.', 'Integer number');
		$this->db['maxReqBodySize'] = new DATTR_HELP_ITEM('Max Request Body Size', ' Specifies the maximum size of a HTTP request body. For 32Bit OS, 2GB is the hard limit; For 64Bit OS, it is virtually unlimited.  ', '[Security] Only set the limit a little higher than what is really needed to  help against DoS attack. Your swapping space must have enough free space.', 'Integer number');
		$this->db['maxReqHeaderSize'] = new DATTR_HELP_ITEM('Max Request Header Size', ' Specifies the maximum size of a HTTP request header including request URL.  Hard limit is 16380 bytes.  ', '[Security &amp; Performance] Set it low and reasonable to reduce memory usage and  help identify bogus requsts and DoS attacks.<br><br> 4-8K is big enough for most web sites.', 'Integer number');
		$this->db['maxReqURLLen'] = new DATTR_HELP_ITEM('Max Request URL Length', ' Specifies the maximum size of a request URL. URL is the full text address used to access a server resource including query string. 8192 bytes is the hard limit. ', '[Security &amp; Performance] Set it low and reasonable to reduce memory usage  and help identify bogus requests and DoS attacks. <br><br>2-3K is big enough for most web  sites unless HTTP GET method is used with large query string instead of POST.', 'Integer number');
		$this->db['maxSSLConnections'] = new DATTR_HELP_ITEM('Max SSL Connections', ' Specifies the maximum concurrent SSL connections the server will accept.  Since total concurrent SSL and non-SSL connections will not exceed the limit specified by  Max Connections, the actual number of concurrent SSL connections allowed  could be lower than this limit. ', '', 'Integer number');
		$this->db['nodeAddresses'] = new DATTR_HELP_ITEM('Node Address List', ' Specifies addresses of nodes in this group. Attributes can be specified for a node are &quot;Destination IP&quot;, &quot;Destination Port&quot;, &quot;Node Tag&quot; and &quot;Source IP&quot;. Destination IP address is manditory, the other attributes are optional. Examples: 192.168.0.11, (node1)192.168.0.11, (node1)192.168.0.10-&gt;192.168.0.11:80, &quot;node1&quot; is the &quot;Node Tag&quot;, &quot;Node Tag&quot; is used to match &quot;JVM Route&quot;.  ', '', '');
		$this->db['onlySelf'] = new DATTR_HELP_ITEM('Only Self Reference', ' Specifies whether to only allow reference from current web site itself. When set to Yes, Allowed Domains has no effect and no other web site can link to protected files. It is convenient if multiple domain names are parked on current web site.  ', '', 'Select from radio box');
		$this->db['outBandwidth'] = new DATTR_HELP_ITEM('Outbound Bandwidth', ' Specifies the maximum allowed outgoing throughput to a single IP address regardless of number of connections established. The real bandwidth could be slightly higher than this setting for efficiency.  Bandwidth is allocated in 4KB units. Set to 0 to disable throttling. Per client bandwidth limit (bytes/sec) can be set at server or virtual host level where virtual host level setting overrides server level setting. ', '[Performance] Set the bandwidth in 8KB units for better performance. <br><br> &amp;nbsp;&amp;nbsp;[Security] Trusted IP or sub-network is not effected.', 'Integer number');
		$this->db['pcKeepAliveTimeout'] = new DATTR_HELP_ITEM('Keep Alive Timeout', ' Specifies the maximum time to keep an idle persistent connection open. When set to -1, the connection never timeout. When set to &gt;=0, the connection will be closed after the timeout has been reached. ', '', 'int');
		$this->db['perClientConnLimit'] = new DATTR_HELP_ITEM('Per Client Throttling Control', 'These are connection control setting on a per client/IP basis.   These settings help to mitigate DoS (Denied of Service) and DDoS (Distributed Denied of Service) attacks.', '', '');
		$this->db['persistConn'] = new DATTR_HELP_ITEM('Persistent Connection', ' Specifies whether to keep the connection open after a request has been processed. Persistent connection can increase performance but some FastCGI external applications does not support persistent connection fully. In order to run Ruby On Rails via a FastCGI interface, persistent connection needs to be turned off. Default is on. Currently, this option is only effective for a FastCGI external application. ', '', 'Select from radio box');
		$this->db['pingInterval'] = new DATTR_HELP_ITEM('Ping Interval', ' Specifies how often to ping a backend worker. For web server backend, a http request based on &quot;Ping URL&quot; will be sent. For other types of backends, an TCP connection attempt will be made to the backend server, if it succeed, the backend will be used as a good node.  ', '', 'Integer number');
		$this->db['pingUrl'] = new DATTR_HELP_ITEM('Ping URL', ' Specifies a HTTP URL that is used to verify the availability of a web server backend worker, have no effect to other type of workers. ', '', 'URL');
		$this->db['rcvBufSize'] = new DATTR_HELP_ITEM('Receive Buffer Size', ' The receiving buffer size of each TCP socket. Set to 0 to use the default  buffer size. 65535 is the hard limit. ', '[Performance] A large receive buffer will increase performance when processing  incoming requests with large payload, i.e. file uploads.', 'Integer number');
		$this->db['realm'] = new DATTR_HELP_ITEM('Realm', ' Specifies the authorization realm for this context. When specified,  a valid user name and password must be provided in order to access this context.  Authorization Realms were set up in Virtual Host Security section.  Here only use its Realm Name. ', '', 'Select from drop down list');
		$this->db['realmName'] = new DATTR_HELP_ITEM('Realm Name', ' Specifies a unique name for the authorization realm. ', '', '');
		$this->db['realmType'] = new DATTR_HELP_ITEM('DB Type', ' Specifies how user/group data is stored for a authorization realm. Currently, user/group data can be stored in flat files or on a LDAP server.  ', '', 'Select from drop down list');
		$this->db['realms'] = new DATTR_HELP_ITEM('Authorization Realms', 'Lists all authorization realms for this virtual host.   Authorization realms is used to block unauthorized users from accessing protected web pages.   A realm is a user directory containing user names and passwords with optional   group classification. Authorization is performed at context level.   Since different contexts can share the same realm(user database), so realms are defined separately.   You can refer to a realm by its name in context configuration.', '', '');
		$this->db['redirectContext'] = new DATTR_HELP_ITEM('Redirect Context', 'A Redirect Context can be used to forward one URI or a group of URIs to another location.   The destination URI can be either on the same web site (internal  redirect) or an absolute URI pointing to another web site (external redirect).', '', '');
		$this->db['redirectUri'] = new DATTR_HELP_ITEM('Redirect URL', ' Specifies a URL that a user will be redirected to when a hotlinking action is detected. You can redirect users to an image or page saying hotlinking is not allowed. If it is not specified,  403 Forbidden will be returned.  ', '', 'Absolute URL');
		$this->db['required'] = new DATTR_HELP_ITEM('Required', ' Specifies which user/group can access this context. With this directive,  a large user database can be shared amongst contexts of different levels of permission. ', 'user username [username ...] or group groupid [groupid ...]', 'Syntax is compatible with Apache, valid syntaxes are   user username [username ...] <br><br>  Only listed users can access this context;  group groupid [groupid ...]<br><br>  Only users belong to listed groups can access this context.  If it is not specified, all valid users can access this resource.');
		$this->db['respBuffer'] = new DATTR_HELP_ITEM('Response Buffering', ' Specifies whether to buffer response received from external applications. If Apache&#039;s Non-Parsed-Header mode is available enabled, buffering is turned off for response with full HTTP headers. ', '', 'Select from drop down list');
		$this->db['retryTimeout'] = new DATTR_HELP_ITEM('Retry Timeout', ' Specifies the period of time that the load balancer waits before retrying the external application that had prior communication problem. ', '', 'Integer number');
		$this->db['rewriteBase'] = new DATTR_HELP_ITEM('Rewrite Base', ' Specifies the base URL for rewrite rules. ', '', 'URL');
		$this->db['rewriteInherit'] = new DATTR_HELP_ITEM('Rewrite Inherit', ' Specifies whether to inherit rewrite rules from parent context. If rewrite is enabled and not inherited, rewrite base and rewrite rules defined in this context will be used. ', '', 'Select from radio box');
		$this->db['rewriteLogLevel'] = new DATTR_HELP_ITEM('Rewrite Log Level', ' Specifies the log level of the rewrite engine debug output. Value ranges from 0 - 9, 0 will disable logging and 9 will produce the most detailed log. The log level of the server error log must be set to at least INFO for this option to take effect. This is useful when testing your rewrite rules.  ', '', 'Integer number');
		$this->db['rewriteMapLocation'] = new DATTR_HELP_ITEM('Location', ' Specifies the location of the rewrite map in syntax of MapType:MapSource. <br><br> LiteSpeed rewrite engine supports three types of rewrite maps:  	Standard Plain Text<br><br> 	    MapType: txt;  		MapSource: file path to a valid plain ASCII	file. <br><br> 		Each line of the file should contain two elements separated  		by blank spaces. The first element is the key and the second 		element is the value. Comments can be added with a leading &quot;#&quot; 		sign.  	<br><br> 	Randomized Plain Text<br><br> 		MapType: rnd;  		MapSource: file path of a valid plain ASCII	file.<br><br> 		File format is similar to the Standard Plain Text file, the 		second element can contain multiple choices separated by a &quot;|&quot; 		sign and is chosen randomly by the rewrite engine. 	<br><br> 	Internal Function<br><br> 	    MapType: int;  		MapSource: Internal string function <br><br> 		4 functions are available: 		 			toupper: converts lookup key to upper cases. 			tolower: converts lookup key to lower cases. 			escape: perform URL encoding on lookup key. 			unescape: perform URL decoding on lookup key. 		 	<br><br> 	The following map types available in Apache 	but not implemented within LiteSpeed: Hash File and External Rewriting Program.  The implementation of LiteSpeed rewrite engine follows the specification of Apache rewrite engine, For more details about rewrite map, please refer to Apache&#039;s mod_rewrite document.  ', '', 'string');
		$this->db['rewriteMapName'] = new DATTR_HELP_ITEM('Name', ' Specifies a unique name for the rewrite map at virtual host level. This name will be used by a mapping-reference in rewrite rules via one of the following syntax:  $\{MapName:LookupKey\}<br><br> $\{MapName:LookupKey|DefaultValue\}   The implementation of LiteSpeed rewrite engine follows the specification of the Apache rewrite engine. For more details about rewrite map, please refer to Apache&#039;s mod_rewrite document.   ', '', 'string');
		$this->db['rewriteRules'] = new DATTR_HELP_ITEM('Rewrite Rules', ' Specifies a list of rewrite rules at virtual host or context level. A rewrite rule is comprised of one RewriteRule directive and optionally preceded by multiple RewriteCond directives.   Each directive should take only one line.  RewriteCond and RewriteRule follow Apache&#039;s rewrite directive syntax, just copy and paste rewrite directives in your Apache  configuration files over. There are minor differences between LiteSpeed and Apache mod_rewrite implementation:  %\{LA-U:variable\} and %\{LA-F:variable\} are ignored by LiteSpeed rewrite engine,    two new server variables are added in LiteSpeed rewrite engine: %\{CURRENT_URI\} represents the current URI processed by rewrite engine; %\{SCRIPT_NAME\} has the same meaning as the corresponding CGI environment variable.    The implementation of LiteSpeed rewrite engine follows the specification of Apache rewrite engine, For more details about rewrite rules, please refer to Apache mod_rewrite document and Apache URL Rewriting guide.   ', '', 'string');
		$this->db['ruleSetAction'] = new DATTR_HELP_ITEM('Rule Set Action', ' Specifies the actions should be taken when a censoring rule in current ruleset was matched. If not set, Default Action will be used. The action string uses the same syntax as directive SecDefaultAction in  Apache mod_security, please refer to mod_security manual for more detail.   ', '', 'string');
		$this->db['runningAs'] = new DATTR_HELP_ITEM('Running As', ' Specifies the user/group that the server process runs as.  This value was set during the installation and to change it,  you have to perform an upgrade procedure via downloaded software package. ', '[Security] Server should not run as a priviledged user such as &quot;root&quot;. For security, it it is critical that the server is configured to runs with a un-privileged user/group combination that do not have login/shell access.  User/Group of nobody is generally a good choice.', '');
		$this->db['scanPOST'] = new DATTR_HELP_ITEM('Scan Request Body', ' Specifies whether to check the body part of a HTTP POST request.  Default is No.  ', '', 'Select from radio box');
		$this->db['serverName'] = new DATTR_HELP_ITEM('Server Name', ' A unique name for this server. You can use $HOSTNAME as value.  ', '', '');
		$this->db['serverPriority'] = new DATTR_HELP_ITEM('Priority', ' Specifies priority of the server process. Value ranges from -20 to 20. A lower number means higher priority.  ', '[Performance] Usually, higher priority leads to slightly higher web performance on a busy server. Do not set priority higher than that of database process.', 'Integer number');
		$this->db['sessionExMethod'] = new DATTR_HELP_ITEM('Session Extraction', ' Specify how to extract session ID from request.  IP Address: Uses Client IP as session ID. Basic Authentication: Uses user name in the basic authentication as session ID. Query String: Uses a Parameter in request query string as session ID. Cookies: Uses a Parameter in cookie as session ID. SSL Session: Uses SSL Session ID as session ID. JVM Route: JVM Route is an extra section appended to a Servlet session ID, which used to identify servlet backend. Example: JSESSIONID=344BA8002DE6FBE2QDF25.tomcat1 URL Path Parameter: Uses a URL Path Parameter as session ID.    ', '', 'Select from checkbox');
		$this->db['sessionId'] = new DATTR_HELP_ITEM('Session ID String', ' Specifies the Session ID string. The string is used to extract the session id value from cookie, query string and URL path parameter.  ', '', '');
		$this->db['sessionTimeout'] = new DATTR_HELP_ITEM('Session Timeout', ' Specify for how long a session will be valid, in seconds. ', '', 'Integer number');
		$this->db['showVersionNumber'] = new DATTR_HELP_ITEM('Server Signature', ' Specifies whether to expose the server signature number in the response header Server. There are three options, when set to Hide Version, only LiteSpeed is shown, when set to  Show Version, the detail version number is shown,  when set to  Hide Full Header, the whole Server header will not be set in the response header. ', '[Security] Set to Hide Version if you do not wish to expose the server version number.', 'Select from radio box');
		$this->db['smartKeepAlive'] = new DATTR_HELP_ITEM('Smart Keep-Alive', ' Specifies whether to turn on Smart Keep-Alive. This option is effective only if Max Keep-Alive Requests &gt; 1. If enabled, you can also enable/disable it at virtual host level. Smart keep-alive will only establish keep-alive connections for requests of JavaScript, CSS Style Sheet and image files. For html pages, connection will not be kept alive. This will help serve more users more efficiently. Normally a web page contains multiple images and scripts that will be cached by the browsers after initial request.  It is more efficient to send those non-html static files through a single keep-alive connection and have the text/html file send through another non-keep-alive connection. This method will reduce idle connections and in turn increase capacity to handle more concurrent requests and users. ', '[Performance] Enable it for high-load web sites.', 'Select from radio box');
		$this->db['sndBufSize'] = new DATTR_HELP_ITEM('Send Buffer Size', ' The sending buffer size of each TCP socket. Set to 0 to use the default  buffer size of the operating system. 65535 is the maximum allowed buffer size. ', '[Performance] If your web site serves large static files, increase the send buffer  size to improve performance.', 'Integer number');
		$this->db['softLimit'] = new DATTR_HELP_ITEM('Connection Soft Limit', ' Specifies the soft limit of concurrent connections allowed from one IP.  Soft Limit can be exceeded temporarily during Grace Period (sec) as long as  the number is below the Connection Hard Limit but Keep-Alive connections  will be closed as soon as possible until the number of connections is lower  than the limit. If number of connections is still over the limit after the  Grace Period (sec), that IP will be blocked for Banned Period (sec).<br><br> For example, if a page contains many small graphs, the browser may try to set up  many connections at same time, especially for HTTP/1.0 clients. You would want to allow  those connections for a short period.<br><br>  Even HTTP/1.1 clients may setup multiple connections to speed up downloading and SSL   requires separate connections from non-SSL connections. Make sure the limit is set properly,   as not to adversely affect normal service. The recommended limit is between 5 and 10. ', '[Security] A lower number will enable serving more distinct clients. <br><br> &amp;nbsp;&amp;nbsp;[Security] Trusted IP or sub-network is not effected. <br><br> &amp;nbsp;&amp;nbsp;[Performance] Set to a high value when you are performing benchmark tests with large number of concurrent client machines.', 'Integer number');
		$this->db['sourceIP'] = new DATTR_HELP_ITEM('Source IP', ' Specifies a Source IP for connecting to the backend worker. It can be overriden in worker configuration. ', '', 'Select from drop down list');
		$this->db['sslEncryptionLevel'] = new DATTR_HELP_ITEM('Encryption Level', ' Specifies the strength level of SSL encryption. ', '[Security &amp; Performance] Stronger encryption consumes more CPU cycles. eNULL means no encryption at all, therefore has the best performance.', 'Check all the encryption method that you want to accept.');
		$this->db['sslProtocol'] = new DATTR_HELP_ITEM('SSL Protocol', 'Customizes SSL Protocols accepted by the listener.', '', '');
		$this->db['sslSetting'] = new DATTR_HELP_ITEM('SSL Private Key & Certificate', 'Every SSL listener requires a pair of SSL private key and SSL certificate.   Multiple SSL listeners can share same key and certificate.   SSL private key can be generated by yourself using SSL software  package, such as OpenSSL. SSL certificate can be purchased from an authorized certificate   issuer like VeriSign or Thawte. You can also sign the certificate by yourself,   but that certificate is not trusted and not supposed to be used on public web   sites containing critical data. However, the self signed certificate is good   enough for internal use, for e.g., for encrypting traffic for the  web administration console of LiteSpeed server.', '', '');
		$this->db['sslVersion'] = new DATTR_HELP_ITEM('SSL Version', ' Specifies which version of SSL protocol will be used. You can choose from  SSLv3 and TLSv1. ', '', '');
		$this->db['statuscode'] = new DATTR_HELP_ITEM('Status Code', ' Specifies the response status code of the external redirection.  If the status code is between 300 and 399, Destination URI can be specified. ', '', 'Select from drop down list');
		$this->db['strategy'] = new DATTR_HELP_ITEM('Strategy', ' Select load balancing strategy from the list.    The round-robin algorithm cycles through a list of backend Server instances in order.  The least-load algorithm improves on the round-robin algorithm by taking into account current load for each server. The least-session algorithm choose the server with fewest session associated.  ', '', 'Select from drop down list');
		$this->db['suffixes'] = new DATTR_HELP_ITEM('Suffix', ' Specifies what kind of file will be protected from hotlinking by listing file suffixes here. ', '', 'comma delimited list, &quot;.&quot; is prohibited');
		$this->db['swappingDir'] = new DATTR_HELP_ITEM('Swapping Directory', ' Specifies the directory where the swapping files should be placed.  When server started in chroot mode, it is relative to the new root directory,  otherwise it is relative to the real root.<br><br>LiteSpeed load balancer uses virtual memory  to reduce the memory usage. Virtual memory, disk swapping, is used to store big request bodies and  dynamically generated responses. The swapping directory should be placed on a disk with enough space. ', '[Performance] Place the swapping directory on a separate disk or increase Max I/O Buffer Size to eliminate swapping.', 'Absolute path.');
		$this->db['templateFile'] = new DATTR_HELP_ITEM('Template File', ' Specifies the path to the configuration file of this template. ', '', 'path');
		$this->db['templateName'] = new DATTR_HELP_ITEM('Name', ' A unique name for the template. ', '', '');
		$this->db['templateVHAliases'] = new DATTR_HELP_ITEM('Aliases', ' Specifies the alternate names for the virtual host. All possible hostname and IP address should be added to the list. Wildcard character * and ? are allowed in the name. It is recommended to append : for web site not on standard port 80. <br><br>  It will be used in the following situations:    To match the host name in the &quot;Host&quot; header when processing a   request.   To populate domain name/alias configurations configurations for add-ons    like frontpage or awstats.  ', '', 'comma-separated list of domain name');
		$this->db['templateVHDomain'] = new DATTR_HELP_ITEM('Domain', ' Specifies a main domain name for this member virtual host. If left blank, virtual host name will be used. This should be a fully qualified domain name, but you can use IP address as well. It is recommended to append : for web site not on standard port 80. It can be referenced by variable $VH_DOMAIN for configuration contains domain names. <br><br>  It will be used in the following situation:    To match the host name in the &quot;Host&quot; header when processing a   request.   To populate domain name configurations for add-ons    like frontpage or awstats.  ', '', 'domain name');
		$this->db['templateVHName'] = new DATTR_HELP_ITEM('Name', ' A unique name for this virtual host among all template member virtual hosts and standalone virtual hosts. It can be referenced by variable $VH_NAME inside a directory path configuration. <br><br> If a standalone virtual host with the same name is also configured, then the member virtual host configuration will be ignored.  ', '', '');
		$this->db['useIpInProxyHeader'] = new DATTR_HELP_ITEM('Use Client IP in Header', ' Specifies whether to use IP address listed in &quot;X-Forwarded-For&quot; HTTP request header for all IP address related features, including connection/bandwidth throttling, access control and IP geolocation. This feature is useful if your web server is behind a load balancer or a proxy server. If you select &quot;Trusted IP Only&quot;, then &quot;X-Forwarded-For&quot; IP will be used only when the request is coming from trusted IPs defined in the Server Level Allowed List.  ', '', 'Select from drop down list');
		$this->db['userDBCacheTimeout'] = new DATTR_HELP_ITEM('User DB Cache Timeout', ' Specifies how often the backend user database will be checked for changes.  Every entry in the cache has a loading timestamp. When cached data is older than the specified timeout, the backend database will be checked  for changes. If there is no change, the timestamp will be reset to current time, otherwise  the new data will be loaded. Sever reload, graceful restart,  will clear the cache immediately. ', '[Performance] If the backend database does not change very often,  set a longer timeout for better performance.', 'Integer number');
		$this->db['userDBLocation'] = new DATTR_HELP_ITEM('User DB Location', ' Specifies the location of the user database.  For DB type of Password File, it is the path to the flat file containing user/password definitions. You can edit this file through the WebAdmin by clicking on the file name.<br><br> Each line of the user file contains a username followed by a colon,  followed by crypt() encrypted password optionally followed by a colon  and group names that user belongs to. Group names are delimitated by comma.  If group information is specified in the user DB, then the group database will not be checked.<br><br> Example:john:HZ.U8kgjnMOHo:admin,user  For DB type of LDAP, it is the LDAP URL to query the user information. For each valid user, the authentication data stored in the LDAP server should contain at least the user id and user password. One and only one record should be returned in the LDAP search request based on the this URL and username received in the HTTP Authentication header. &quot;$k&quot; must be specified in the filter part of the URL and it will be replaced with the username. User password attribute must be returned in the query result. Attribute name of user password is specified by Password Attribute. Group information can be optionally specified by Member-of Attribute.<br><br> Example: At minimum, a user can be defined in LDAP with object classes: uidObject, simpleSecurityObject and organizationalRole. The following URL could be used: <br><br> ldap://localhost/ou=UserDB,dc=example,dc=com???(&amp;(objectClass=*)(uid=$k))  ', '[Security] It is recommended to store a user password file outside of the document tree.  If it has to be placed inside document tree, simply name it with a leading &quot;.ht&quot;  like .htuser to prevent being served as a static file.  LiteSpeed web server  does not serve files prefixed with &quot;.ht&quot;.', 'path to the user DB file or LDAP URL (RFC 2255)');
		$this->db['userDBMaxCacheSize'] = new DATTR_HELP_ITEM('User DB Max Cache Size', ' Specifies the maximum cache size of the user database.  Most recently accessed user authentication data will be cached in memory  to provide maximum performance. ', '[Performance] As larger cache will consume more memory,  a higher value may or may not provide better performance. Set it to an appropriate size according  to your user database size and site usage.', 'Integer number');
		$this->db['userDB_attrMemberOf'] = new DATTR_HELP_ITEM('Member-of Attribute', ' Specifies the name of the Member-of attribute for a user record stored in LDAP server. Default value is memberOf. Member-of attribute can be used to specify the group name that the user belongs to. ', '', 'string');
		$this->db['userDB_attrPasswd'] = new DATTR_HELP_ITEM('Password Attribute', ' Specifies the name of the password attribute for a user record stored in LDAP server. Default value is userPassword. ', '', 'string');
		$this->db['verifyDepth'] = new DATTR_HELP_ITEM('Verify Depth', ' Specifies the maximum depth of CA Certificates in  It sets how deeply the certificate should be verified before  determine that the clients don&#039;t have a valid certificate. Default is 1. ', '', 'Select from drop down list');
		$this->db['vhAccessControl'] = new DATTR_HELP_ITEM('Access Control', 'Specifies what sub-network and/or IP address can access this virtual host   in addition to server level access control. Virtual host setting does NOT override   the server setting. Whether to block/allow an IP is determined by the combination   of allowed list and denied list. If you want to block certain IP or sub-network,   put * or ALL in the allowed list and list the blocked IP or   sub-network in the denied list. If you want to only allow certain IP or sub-network,   put * or ALL in the denied list and list the allowed IP or   sub-network in the allowed list. The setting of the smallest scope that fits for   an IP will be used to determine whether to block or allow access.', '', '');
		$this->db['vhHotlink'] = new DATTR_HELP_ITEM('Hotlink Control', 'Hotlinking are requests made from an external website to  files on your own website often referred to as &quot;leeching&quot;. This practice  introduce additional bandwidth usage that you should not be responsible for. <br><br>  LiteSpeed server can prevent others from hotlinking content on  your web site by checking the &quot;Referer&quot; header within a HTTP request. If the &quot;Referer&quot; header does not match your own website,   the request is denied.', '', '');
		$this->db['vhMaxKeepAliveReq'] = new DATTR_HELP_ITEM('Max Keep-Alive Requests', ' Specifies the maximum requests that can be served through a Keep-Alive (Persistent)  connection. Connections will be closed once this limit is reached. You can specify different limit for different virtual hosts. This number cannot exceed server level Max Keep-Alive Requests limit. ', '[Performance] Set to a high and resonable value. Value of 1 or less will disable Keep-Alive.', 'Integer number');
		$this->db['vhName'] = new DATTR_HELP_ITEM('Virtual Host Name', ' A unique name for a virtual host. It is recommended to use the domain name of this virtual host. ', '', '');
		$this->db['vhSmartKeepAlive'] = new DATTR_HELP_ITEM('Smart Keep-Alive', ' Specifies whether to turn on Smart Keep-Alive for this virtual host. This option is effective only if server level Smart Keep-Alive is enabled and Max Keep-Alive Requests &gt; 1. ', '[Performance] Enable this for busy web sites.', 'Select from radio box');
		$this->db['vhaccessControl_allow'] = new DATTR_HELP_ITEM('Allowed List', ' Specifies the list of IP or sub-net allowed. ', '', 'comma-delimited list of IP address or sub-network. * or ALL,  sub-network can be like 192.168.1.0/255.255.255.0, 192.168.1 or 192.168.1.*.');
		$this->db['vhadminEmails'] = new DATTR_HELP_ITEM('Administrator Email', ' Specifies email address of administrators of this virtual host. ', '', '');
		$this->db['vhlog_logLevel'] = new DATTR_HELP_ITEM('Log Level', ' Specifies the level of logging. Available levels are ERROR,  WARNING, NOTICE, INFO and DEBUG from high to low.  Only messages with higher level than current setting will be logged.  If you want to set it to DEBUG, you must set server log level to be DEBUG as well.  The level of debugging is solely controlled by Debug Level. ', '[Performance] Unless Debug Level is set to a level other than NONE, DEBUG log level does not have any performance impact and is recommended.', 'Select from drop down list');
		$this->db['virtualHostMapping'] = new DATTR_HELP_ITEM('Virtual Host Mappings', 'Specifies the relationship between the listener and virtual hosts.   Listener and virtual hosts are associated by domain names.   A HTTP request will be routed to a virtual host with matching domain name.   One listener can map to multiple virtual hosts on different domain names.   One virtual host can also be mapped from different listeners.   One listener can allow one catchall virtual host with domain name &quot;*&quot;.   When there is no explicitly matched domain name, listener will forward   the request to that catchall virtual host.', '[Performance] Only add necessary mappings. If the listener is dedicated   to only one virtual host, then only set the catchall mapping with &quot;*&quot;.', '');
		$this->db['virtualHostName'] = new DATTR_HELP_ITEM('Virtual Host', ' Specifies the name of a virtual host.  ', '', 'Select from drop down list');
		$this->db['workerGroupEnabled'] = new DATTR_HELP_ITEM('Enabled', ' Specifies whether to enable this worker group. ', '', 'Select from radio box');
		$this->db['workerName'] = new DATTR_HELP_ITEM('Name', ' A unique name for a group of worker. ', '', '');
		$this->db['worker_type'] = new DATTR_HELP_ITEM('Type', ' Specifies type of workers. Worker type can be: FastCGI, LiteSpeed SAPI (LSAPI), Servlet Engine, Web Server. ', '', 'Select from drop down list');
	}
	
}
